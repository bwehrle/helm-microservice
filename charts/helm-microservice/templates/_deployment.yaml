{{- define "deployment" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "microservice.fullname" . }}
  {{- if .Values.annotations }}
  annotations:
  {{- range $key, $value := .Values.annotations }}
    {{ $key }}: {{ $value }}
  {{- end }}
  {{- end }}
  labels:
    app.kubernetes.io/name: {{ include "microservice.name" . }}
    helm.sh/chart: {{ include "microservice.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount | default .Values.global.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "microservice.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "microservice.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if or .Values.imagePullSecrets .Values.imageCredentials }}
      imagePullSecrets:
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      {{- if .Values.imageCredentials }}
      - name: {{ include "microservice.name" . }}-docker-credentials
      {{- end }}
      {{- if .Values.serviceAccount }}
      serviceAccountName: {{ .Values.serviceAccount }}
      {{- end }}
      {{- if .Values.hostAliases }}
      hostAliases:
      {{- range .Values.hostAliases }}
      - ip: {{ .ip }}
        hostnames:
        {{- range .hostnames }}
        - {{ . }}
        {{- end }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          command: {{ .Values.command }}
          {{- end }}
          {{- if .Values.args }}
          args: {{ .Values.args }}
          {{- end }}
          ports:
            {{- range .Values.services -}}
            {{- range $port:= .specs}}
            - name: {{ .name }}
              containerPort: {{ .targetPort | default .port}}
              protocol: {{ .protocol | default "TCP" }}
            {{- end }}
            {{- end }}
          {{- if (merge .Values.global.environment .Values.environment) }}
          env:
          {{- range $name, $value := merge .Values.global.environment .Values.environment}}
          - name: {{ $name | quote}}
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.volumes.enabled }}
          volumeMounts:
            {{- range $conf := .Values.volumes.configMaps }}
            - mountPath: {{ $conf.mountPath }}
              name: {{ $conf.name }}-volume
            {{- end }}
            {{- if .Values.volumes.pvc.enabled }}
            - mountPath: {{ .Values.volumes.pvc.mountPath }}
              name: {{ .Values.volumes.pvc.existing_claim | default .Values.volumes.pvc.name }}-volume
            {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.liveness.path }}
              port: {{ .Values.liveness.port }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
      {{- end}}
      {{- if .Values.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readiness.path }}
              port: {{ .Values.readiness.port }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
            failureThreshold: {{ .Values.readiness.failureThreshold }}
      {{- end }}
      {{- if .Values.volumes.enabled }}
      volumes:
        {{- range $conf := .Values.volumes.configMaps }}
        - name: {{ $conf.name }}-volume
          configMap:
            name: {{ $conf.name }}
      {{- end }}
      {{- if .Values.volumes.pvc.enabled}}
        - name: {{ .Values.volumes.pvc.existing_claim | default .Values.volumes.pvc.name }}-volume
          persistentVolumeClaim:
            claimName: {{ .Values.volumes.pvc.existing_claim | default .Values.volumes.pvc.name }}
      {{- end}}
      {{- end }}
{{- end -}}